#!/bin/sh

if [ "$1" = "/bin/sh" ]; then
  shift
fi

if [ -n "$APP_URL" ]; then
  # extract the protocol
  proto="$(echo $APP_URL | grep :// | sed -e's,^\(.*\)://.*,\1,g')"

  # remove the protocol -- updated
  url=$(echo $APP_URL | sed -e s,${proto}://,,g)
  [ -z "$proto" ] && { proto=http; }

  # extract the user (if any)
  user="$(echo $url | grep @ | cut -d@ -f1)"

  # extract the host -- updated
  host=$(echo $url | sed -e s,$user@,,g | cut -d/ -f1)
fi

NGROK_AUTH_TOKEN=${NGROK_AUTH_TOKEN:-$NGROK_AUTH}
if [ -n "$NGROK_AUTH_TOKEN" ]; then
  ARGS="--authtoken=$NGROK_AUTH_TOKEN "
elif [ "$proto" == "tcp" ]; then
  echo "You must specify a auth token (NGROK_AUTH_TOKEN) when using TCP proto."
  echo "Sign up for an authentication token at https://ngrok.com"
  exit 1
fi

# Set config option, defaults to /ngrok/ngrok.yml
ARGS="$ARGS -config ${NGROK_CONFIG:-/ngrok/ngrok.yml} "

# Set log option, defaults to stdout
ARGS="$ARGS -log ${NGROK_LOG:-stdout} "

# Set the subdomain or hostname, depending on which is set
if [ -n "$NGROK_HOSTNAME" ] && [ -n "$NGROK_AUTH_TOKEN" ]; then
  ARGS="$ARGS -hostname $NGROK_HOSTNAME "
elif [ -n "$NGROK_SUBDOMAIN" ] && [ -n "$NGROK_AUTH_TOKEN" ]; then
  ARGS="$ARGS -subdomain $NGROK_SUBDOMAIN "
elif [ -n "$NGROK_HOSTNAME" ] || [ -n "$NGROK_SUBDOMAIN" ]; then
  if [ -z "$NGROK_AUTH_TOKEN" ]; then
    echo "You must specify an authentication token after registering at https://ngrok.com to use custom domains."
    exit 1
  fi
fi

if [ -n "$NGROK_USERNAME" ] && [ -n "$NGROK_PASSWORD" ] && [ -n "$NGROK_AUTH_TOKEN" ]; then
  ARGS="$ARGS -httpauth=\"$NGROK_USERNAME:$NGROK_PASSWORD\" "
elif [ -n "$NGROK_USERNAME" ] || [ -n "$NGROK_PASSWORD" ]; then
  if [ -z "$NGROK_AUTH_TOKEN" ]; then
    echo "You must specify a username, password, and Ngrok authentication token to use the custom HTTP authentication."
    echo "Sign up for an authentication token at https://ngrok.com"
    exit 1
  fi
fi

case "$1" in
  -h|help)  ARGS=$1 ;;
  *)        ARGS="$ARGS $* $url" ;;
esac

echo "* Envs started with NGROK_:"
env | grep '^NGROK'
echo "* ngrok running with the following args: ${proto} ${ARGS}"

exec /bin/ngrok $proto $ARGS
